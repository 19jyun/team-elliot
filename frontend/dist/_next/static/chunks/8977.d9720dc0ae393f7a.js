"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8977],{8977:(t,e,n)=>{n.d(e,{O:()=>u,disconnectSocket:()=>s,w:()=>l});var o=n(9829),r=n(4582);let c=null,i=!1,a=async()=>{try{var t;let e=await (0,r.Ht)();if(!(null==e||null==(t=e.user)?void 0:t.id)){window.location.href="/auth";return}let n=await fetch("".concat("http://localhost:3001","/auth/refresh"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:e.user.id})});if(!n.ok){window.location.href="/auth";return}await n.json(),c&&(c.disconnect(),c=null),setTimeout(async()=>{try{await l()}catch(t){}},1e3)}catch(t){window.location.href="/auth"}},l=async()=>{if(null==c?void 0:c.connected)return c;if(i){for(;i;)await new Promise(t=>setTimeout(t,100));return c}i=!0,c&&(c.removeAllListeners(),c.disconnect(),c=null);try{let t=await (0,r.Ht)(),e=null==t?void 0:t.accessToken;if(!e)throw Error("인증 토큰이 없습니다.");c=(0,o.io)("http://localhost:3001",{auth:{token:e},transports:["websocket","polling"],autoConnect:!0,reconnection:!0,reconnectionAttempts:5,reconnectionDelay:1e3});let n=!1;return c.on("connect",()=>{n||(n=!0)}),c.on("disconnect",t=>{}),c.on("connect_error",t=>{}),c.on("auth_error",t=>{"TOKEN_EXPIRED"===t.type?a():"INVALID_TOKEN"===t.type?window.location.href="/auth":setTimeout(()=>{c&&c.connect()},5e3)}),c.on("reconnect",t=>{}),c.on("reconnect_error",t=>{}),c}catch(t){throw i=!1,t}finally{i=!1}},s=()=>{c&&(c.disconnect(),c=null)},u=()=>c}}]);