{
  "name": "backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs}/**/*.ts\" --fix",
    "test": "jest --config ./test/jest-unit.json",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:unit": "jest --config ./test/jest-unit.json",
    "test:unit:watch": "jest --config ./test/jest-unit.json --watch",
    "test:unit:coverage": "jest --config ./test/jest-unit.json --coverage",
    "test:unit:auth": "jest --config ./test/jest-unit.json --testPathPattern=auth",
    "test:unit:class": "jest --config ./test/jest-unit.json --testPathPattern=class",
    "test:unit:student": "jest --config ./test/jest-unit.json --testPathPattern=student",
    "test:unit:teacher": "jest --config ./test/jest-unit.json --testPathPattern=teacher",
    "test:unit:academy": "jest --config ./test/jest-unit.json --testPathPattern=academy",
    "test:integration": "jest --config ./test/jest-integration.json",
    "test:db:start": "docker-compose -f docker-compose.test.yml up -d",
    "test:db:stop": "docker-compose -f docker-compose.test.yml down",
    "test:db:reset": "docker-compose -f docker-compose.test.yml down -v && docker-compose -f docker-compose.test.yml up -d",
    "test:setup": "bash scripts/setup-integration-tests.sh",
    "test:setup:win": "scripts\\setup-integration-tests.bat",
    "test:full": "npm run test:db:start && sleep 10 && npm run test:integration && npm run test:db:stop",
    "test:all": "npm run test:unit && npm run test:integration",
    "prisma:merge": "node scripts/merge-schemas.js",
    "prisma:restore": "node scripts/restore-schema.js",
    "prisma:format": "npm run prisma:merge && npx prisma format",
    "prisma:migrate": "npm run prisma:merge && npx prisma migrate dev",
    "prisma:generate": "npm run prisma:merge && npx prisma generate",
    "prisma:seed": "ts-node prisma/seed.ts",
    "seed": "ts-node prisma/seed.ts",
    "seed:deploy": "node dist/prisma/seed_deploy.js",
    "db:reset": "ts-node prisma/reset.ts",
    "db:reset:seed": "ts-node prisma/reset.ts && ts-node prisma/seed.ts"
  },
  "dependencies": {
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.3.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/platform-socket.io": "^10.4.20",
    "@nestjs/serve-static": "^4.0.2",
    "@nestjs/swagger": "^8.0.7",
    "@nestjs/websockets": "^10.4.20",
    "@prisma/client": "^6.0.0",
    "@types/passport-jwt": "^4.0.1",
    "bcrypt": "^6.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "ioredis": "^5.4.1",
    "multer": "^1.4.5-lts.1",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "phone": "^3.1.66",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "socket.io": "^4.8.1",
    "twilio": "^5.7.3"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/bcrypt": "^5.0.2",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.2",
    "@types/multer": "^1.4.12",
    "@types/node": "^20.3.1",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "eslint": "^8.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "prisma": "^6.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  }
}
